#!/usr/bin/python
# -*- coding: utf-8 -*-
#
#     rce-core/rce-environment
#
#     This file is part of the RoboEarth Cloud Engine framework.
#
#     This file was originally created for RoboEearth
#     http://www.roboearth.org/
#
#     The research leading to these results has received funding from
#     the European Union Seventh Framework Programme FP7/2007-2013 under
#     grant agreement no248942 RoboEarth.
#
#     Copyright 2013 RoboEarth
#
#     Licensed under the Apache License, Version 2.0 (the "License");
#     you may not use this file except in compliance with the License.
#     You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.
#
#     \author/s: Dominique Hunziker
#
#


# twisted specific imports
from twisted.internet import reactor
from twisted.cred.credentials import UsernamePassword

# rce specific imports
from rce.environment import main


def _get_argparse():
    from argparse import ArgumentParser

    parser = ArgumentParser(prog='rce-environment',
                            description='RCE Environment Client Process.')

    parser.add_argument('masterIP', type=str,
                        help='IP address of Master Process.')
    parser.add_argument('masterPort', type=int,
                        help='Port where the Master Process is listening for '
                             'internal Perspective Broker connections.')
    parser.add_argument('internalPort', type=int,
                        help='Port where the Endpoints are listening for '
                             'data communications.')
    parser.add_argument('uid', type=str,
                        help='Unique ID which is used to identify this '
                             'environment endpoint.')
    parser.add_argument('password', type=str,
                        help='Password used to authenticate this '
                             'environment endpoint.')

    return parser


if __name__ == '__main__':
    args = _get_argparse().parse_args()

    # Credentials which should be used to login to Master process
    cred = UsernamePassword(args.uid, args.password)

    main(reactor, cred, args.masterIP, args.masterPort, args.internalPort,
         args.uid)
